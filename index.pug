doctype html
html(lang="en")
  head
    meta(charset="UTF-8")
    meta(name="viewport" content="width=device-width, initial-scale=1.0")
    meta(name="description" content="Conway's Game of Life - A cellular automaton simulation")
    title Game of Life
    script(src="https://cdn.tailwindcss.com")
    link(rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css")
    link(rel="stylesheet" href="styles.css")

  body(class="bg-black min-h-screen")
    //- Top notification banner (hidden by default)
    div#emptyBanner(class="fixed top-0 left-0 w-full z-50 bg-red-600 text-white text-center py-3 px-4 font-small flex items-center justify-center transition-all duration-300", style="display: none;")
      span.mr-2
        i(class="fa-solid fa-circle-exclamation mr-2")
        | Simulation stopped: The grid is empty. All cells are dead.
      button#closeBanner(type="button" class="ml-4 text-white text-xl hover:opacity-70 focus:outline-none")
        i(class="fa-solid fa-xmark")
    main(class="container mx-auto px-4 py-8")
      div(class="flex flex-col lg:flex-row gap-8 items-start")
        |//- Left Panel
        aside(class="w-full lg:w-80 flex-shrink-0")
          div(class="bg-gray-900 rounded-lg p-6 space-y-6")
            header(class="space-y-4")
              h1(class="text-2xl font-bold text-white") Game of Life
              p(class="text-gray-300") A cellular automaton devised by mathematician John Conway in 1970. The game follows simple rules to simulate the evolution of a grid of cells, where each cell can be either alive or dead. 
                a(href="https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life" target="_blank") More...

            //- Controls Section
            section(class="border border-gray-700 rounded-lg overflow-hidden p-4 space-y-4")
              div(class="flex gap-2")
                button#stepBackButton(class="p-2 bg-gray-700 text-white rounded hover:bg-gray-600 transition-colors" aria-label="Step back")
                  i(class="fa-solid fa-backward-step w-6 h-6")
                button#startButton(type="button" class="p-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition-colors" aria-label="Start/Stop")
                  i#startIcon(class="fa-solid fa-play w-6 h-6")
                  span.sr-only Start/Stop
                button#stepForwardButton(class="p-2 bg-gray-700 text-white rounded hover:bg-gray-600 transition-colors" aria-label="Step forward")
                  i(class="fa-solid fa-forward-step w-6 h-6")
                button#clearButton(class="p-2 bg-red-500 text-white rounded hover:bg-red-600 transition-colors" aria-label="Clear")
                  i#startIcon(class="fa-solid fa-broom w-6 h-6")
              
              div(class="space-y-2")
                label(class="text-white block" for="speedSlider") Speed
                div(class="flex items-center gap-4")
                  input#speedSlider(class="flex-1" type="range" min="50" max="500" value="100" aria-label="Simulation speed")
                  span#speedValue(class="text-white w-16 text-right") 100ms

            //- Rules Section
            section(class="border border-gray-700 rounded-lg overflow-hidden")
              details(class="group")
                summary(class="w-full px-4 py-3 flex justify-between items-center bg-gray-800 hover:bg-gray-700 transition-colors cursor-pointer list-none")
                  h2(class="text-xl font-bold text-white") Rules
                  i(class="fa-solid fa-chevron-down w-6 h-6 transform transition-transform group-open:rotate-180")
                div(class="px-4 py-3 space-y-2 text-gray-300")
                  ol(class="list-decimal list-inside space-y-2")
                    li Any live cell with fewer than two live neighbors dies (underpopulation)
                    li Any live cell with two or three live neighbors lives on to the next generation
                    li Any live cell with more than three live neighbors dies (overpopulation)
                    li Any dead cell with exactly three live neighbors becomes a live cell (reproduction)

            //- Instructions Section
            section(class="border border-gray-700 rounded-lg overflow-hidden")
              details(class="group")
                summary(class="w-full px-4 py-3 flex justify-between items-center bg-gray-800 hover:bg-gray-700 transition-colors cursor-pointer list-none")
                  h2(class="text-xl font-bold text-white") Instructions
                  i(class="fa-solid fa-chevron-down w-6 h-6 transform transition-transform group-open:rotate-180")
                div(class="px-4 py-3 space-y-2 text-gray-300")
                  ol(class="list-decimal list-inside space-y-2")
                    li Click on cells to toggle them alive/dead
                    li Use Start/Stop to control the simulation
                    li Adjust speed with the slider
                    li Save interesting patterns
                    li Use step buttons to move frame by frame

        //- Main Game Area
        section(class="flex-grow flex justify-center")
          figure(class="bg-gray-900 p-6 rounded-lg")
            canvas#gameCanvas(class="border border-gray-700" aria-label="Game of Life grid")

    script(src="index.js") 